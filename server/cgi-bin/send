#!/bin/bash

resp=`mktemp`

if [[ "$REQUEST_METHOD" == "OPTIONS" ]]; then
  echo "$SERVER_PROTOCOL 204 No Content"
elif [[ "$REQUEST_METHOD" != "POST" ]]; then
  cat > $resp << EOF
Method not allowed
EOF
  echo "$SERVER_PROTOCOL 405 Method Not Allowed"
elif ! internal/checkemail.d $HTTP_X_SGCC_TO; then
  cat > $resp << EOF
X-SGCC-To in header fields is not an Email address
EOF
  echo "$SERVER_PROTOCOL 400 Bad Request"
elif [[ -n "$CONTENT_TYPE" ]] && [[ "$CONTENT_TYPE" != "application/octet-stream" ]] && [[ "$CONTENT_TYPE" != 'text/plain' ]] && [[ "$CONTENT_TYPE" != "application/pgp-encrypted" ]]; then
  echo "$SERVER_PROTOCOL 415 Unsupported Media Type"
elif [[ "$HTTP_CONTENT_LENGTH" -gt 1024 ]]; then
  echo "$SERVER_PROTOCOL 413 Request Entity Too Large"
else
  boxname=`printf "$HTTP_X_SGCC_TO" | base64`
  boxpath="../../data/box/$boxname"
  mkdir -p "$boxpath"
  datapath="${boxpath}/$(date +%s%N).gpg"
  gpg --dearmor <&0 --output "$datapath" 2>$resp
  if [[ $? -ne 0 ]]; then
    echo "$SERVER_PROTOCOL 500 Internal Server Error"
    rm $datapath
    [[ `ls -A $boxpath` ]] || rmdir $boxpath
  fi
  echo 'OK!' > $resp
fi

cat - $resp << EOF
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: POST, OPTIONS
Access-Control-Allow-Headers: X-SGCC-To
Access-Control-Max-Age: 86400
Allow: OPTIONS, POST
Server: $SERVER_SOFTWARE $GATEWAY_INTERFACE (sgcc)
Date: $(date -u "+%a, %d %b %Y %T GMT")
Content-Type: text/plain
Content-Length: `stat --format=%s $resp`

EOF

rm $resp
